services:
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: testdb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d testdb" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - app-network
    ports:
      - "5432:5432"

  skystudy:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: skystudyproject:latest
    container_name: skystudy
    volumes:
      - ./logs:/app/logs
    ports:
      - "8080:8080"
    environment:
      SPRING_REDIS_HOST: redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - logger.level=ERROR
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9200:9200
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      skystudy:
        condition: service_healthy
    networks:
      - app-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.13.4
    container_name: filebeat
    restart: unless-stopped
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/app/logs
    entrypoint: "filebeat -e -strict.perms=false"
    depends_on:
      elasticsearch:
        condition: service_started
    networks:
      - app-network

networks:
  app-network:
    driver: bridge